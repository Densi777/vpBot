# -*- coding: utf-8 -*-
import telebot
import cherrypy
import config
import inf
from telebot import types
import psycopg2

conn = psycopg2.connect(database="testdb", user="postgres", password="12qwaszx", host="127.0.0.1", port="5432")
print('Connected')
# cur = conn.cursor()

WEBHOOK_HOST = '185.228.233.139'
WEBHOOK_PORT = 88
WEBHOOK_LISTEN = '0.0.0.0'

WEBHOOK_SSL_CERT = './certs/webhook_cert.pem'
WEBHOOK_SSL_PRIV = './certs/webhook_pkey.pem'

WEBHOOK_URL_BASE = "https://%s:%s" % (WEBHOOK_HOST, WEBHOOK_PORT)
WEBHOOK_URL_PATH = "/%s/" % config.token


bot = telebot.TeleBot(config.token)


class WebhookServer(object):
    @cherrypy.expose
    def index(self):
        if 'content-length' in cherrypy.request.headers and \
                        'content-type' in cherrypy.request.headers and \
                        cherrypy.request.headers['content-type'] == 'application/json':
            length = int(cherrypy.request.headers['content-length'])
            json_string = cherrypy.request.body.read(length).decode("utf-8")
            update = telebot.types.Update.de_json(json_string)
            bot.process_new_updates([update])
            return ''
        else:
            raise cherrypy.HTTPError(403)


@bot.message_handler(func=lambda message: True, commands=['start'])
def main_menu(message):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row('üìù –ó–∞–∫–∞–∑–∞—Ç—å', 'ü•Ç –ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤')
    keyboard.row('üí∞ –ü—Ä–∞–π—Å-–ª–∏—Å—Ç', '‚öô –ù–∞—Å—Ç—Ä–æ–π–∫–∏')
    keyboard.row('‚Ñπ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', 'üëî –û –Ω–∞—Å')
    msg = bot.send_message(message.chat.id, 'üìñ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:', reply_markup=keyboard)
    bot.register_next_step_handler(msg, menu)


def menu(message):
    if message.text == 'üìù –ó–∞–∫–∞–∑–∞—Ç—å':
        config.excount += 1
        order_tobacco(message)

    elif message.text == 'ü•Ç –ë–∞–Ω–∫–µ—Ç':
        config.excount += 2
        banquet(message)

    elif message.text == 'üí∞ –ü—Ä–∞–π—Å-–ª–∏—Å—Ç':
        price_list(message)

    elif message.text == '‚öô –ù–∞—Å—Ç—Ä–æ–π–∫–∏':
        settings(message)

    elif message.text == '‚Ñπ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è':
        info(message)

    elif message.text == 'üëî –û –Ω–∞—Å':
        about(message)


def order_tobacco(message):
    print(message.chat.id)
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row('üêí –õ—ë–≥–∫–∏–π', 'ü¶ç –ö—Ä–µ–ø–∫–∏–π')
    msg = bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –∫—Ä–µ–ø–∫–æ—Å—Ç—å –∫–∞–ª—å—è–Ω–∞:', reply_markup=keyboard)
    bot.register_next_step_handler(msg, order_tobacco_get)


def order_tobacco_get(message):
    if message.text == 'üêí –õ—ë–≥–∫–∏–π':
        config.excount += 1
        order_cups(message)

    elif message.text == 'ü¶ç –ö—Ä–µ–ø–∫–∏–π':
        config.excount += 10
        order_cups(message)


def order_cups(message):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row('1Ô∏è‚É£ –û–¥–Ω–∞', '2Ô∏è‚É£ –î–≤–µ', '3Ô∏è‚É£ –¢—Ä–∏')
    keyboard.row('üî¢ –ë–æ–ª–µ–µ —Ç—Ä—ë—Ö', '‚Ü™ –ù–∞–∑–∞–¥')
    msg = bot.send_message(message.chat.id, '‚òï –í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞—à–µ–∫:', reply_markup=keyboard)
    bot.register_next_step_handler(msg, order_cups_get)


def order_cups_get(message):
    if message.text == '1Ô∏è‚É£ –û–¥–Ω–∞':
        config.excount += 1
        order_set_address(message)

    elif message.text == '2Ô∏è‚É£ –î–≤–µ':
        config.excount += 2
        order_set_address(message)

    elif message.text == '3Ô∏è‚É£ –¢—Ä–∏':
        config.excount += 3
        order_set_address(message)

    elif message.text == 'üî¢ –ë–æ–ª–µ–µ —Ç—Ä—ë—Ö':
        config.excount += 4
        order_set_address(message)

    elif message.text == '‚Ü™ –ù–∞–∑–∞–¥':
        order_tobacco(message)


def order_set_address(message):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row('–û—Ç–ø—Ä–∞–≤–∏—Ç—å')
    msg = bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏—Ç–µ –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏', reply_markup=keyboard)
    config.address = msg
    bot.register_next_step_handler(msg, verify_order)


def verify_order(message):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row('‚úÖ –î–∞', '‚ôª –í–µ—Ä–Ω—É—Ç—å—Å—è')
    msg = bot.send_message(message.chat.id, '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –í–∞—à –∑–∞–∫–∞–∑\n–í—Å–µ –≤–µ—Ä–Ω–æ?', reply_markup=keyboard)
    bot.register_next_step_handler(msg, yes_or_no)


def yes_or_no(message):
    if message.text == '‚úÖ –î–∞':
        done(message)

    elif message.text == '‚ôª –í–µ—Ä–Ω—É—Ç—å—Å—è':
        order_set_address(message)


def done(message):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row('‚úî –ó–∞–≤–µ—Ä—à–∏—Ç—å')
    msg = bot.send_message(message.chat.id, 'üì¶ –ó–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç', reply_markup=keyboard)
    bot.register_next_step_handler(msg, close_order)


def close_order(message):
    if message.text == '‚úî –ó–∞–≤–µ—Ä—à–∏—Ç—å':
        if config.excount == 3:
            bot.send_message(chat_id=config.my_id, text='–ó–∞–∫–∞–∑:\n–õ—ë–≥–∫–∏–π –∫–∞–ª—å—è–Ω\n1 —á–∞—à–∞\n–ü–æ –∞–¥—Ä–µ—Å—É:\n' + config.address)

        elif config.excount == 4:
            bot.send_message(chat_id=config.my_id, text='–ó–∞–∫–∞–∑:\n–õ—ë–≥–∫–∏–π –∫–∞–ª—å—è–Ω\n2 —á–∞—à–∏\n–ü–æ –∞–¥—Ä–µ—Å—É:\n' + config.address)

        elif config.excount == 5:
            bot.send_message(chat_id=config.my_id, text='–ó–∞–∫–∞–∑:\n–õ—ë–≥–∫–∏–π –∫–∞–ª—å—è–Ω\n3 —á–∞—à–∏\n–ü–æ –∞–¥—Ä–µ—Å—É:\n' + config.address)

        elif config.excount == 6:
            bot.send_message(chat_id=config.my_id, text='–ó–∞–∫–∞–∑:\n–õ—ë–≥–∫–∏–π –∫–∞–ª—å—è–Ω\n–ë–æ–ª–µ–µ —Ç—Ä—ë—Ö —á–∞—à\n–ü–æ –∞–¥—Ä–µ—Å—É:\n' + config.address)

        elif config.excount == 12:
            bot.send_message(chat_id=config.my_id, text='–ó–∞–∫–∞–∑:\n–ö—Ä–µ–ø–∫–∏–π –∫–∞–ª—å—è–Ω\n1 —á–∞—à–∞\n–ü–æ –∞–¥—Ä–µ—Å—É:\n' + config.address)

        elif config.excount == 13:
            bot.send_message(chat_id=config.my_id, text='–ó–∞–∫–∞–∑:\n–ö—Ä–µ–ø–∫–∏–π –∫–∞–ª—å—è–Ω\n2 —á–∞—à–∏\n–ü–æ –∞–¥—Ä–µ—Å—É:\n' + config.address)

        elif config.excount == 14:
            bot.send_message(chat_id=config.my_id, text='–ó–∞–∫–∞–∑:\n–ö—Ä–µ–ø–∫–∏–π –∫–∞–ª—å—è–Ω\n3 —á–∞—à–∏\n–ü–æ –∞–¥—Ä–µ—Å—É:\n' + config.address)

        elif config.excount == 15:
            bot.send_message(chat_id=config.my_id, text='–ó–∞–∫–∞–∑:\n–ö—Ä–µ–ø–∫–∏–π –∫–∞–ª—å—è–Ω\n–ë–æ–ª–µ–µ —Ç—Ä—ë—Ö —á–∞—à\n–ü–æ –∞–¥—Ä–µ—Å—É:\n' + config.address)
        main_menu(message)


def banquet(message):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row('5+', '10+', '20+')
    keyboard.row('‚Ü™ –ù–∞–∑–∞–¥')
    msg = bot.send_message(message.chat.id, '–°–∫–æ–ª—å–∫–æ –í–∞—Å —á–µ–ª–æ–≤–µ–∫?', reply_markup=keyboard)
    bot.register_next_step_handler(msg, banquet_get)


def banquet_get(message):
    if message.text == '5+':
        count_of_hookahs(message)

    elif message.text == '10+':
        count_of_hookahs(message)

    elif message.text == '20+':
        count_of_hookahs(message)

    elif message.text == '‚Ü™ –ù–∞–∑–∞–¥':
        main_menu(message)


def count_of_hookahs(message):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row('–û–¥–∏–Ω', '–î–≤–∞', '–¢—Ä–∏')
    keyboard.row('‚Ü™ –ù–∞–∑–∞–¥')
    msg = bot.send_message(message.chat.id, '–°–∫–æ–ª—å–∫–æ –Ω—É–∂–Ω–æ –∫–∞–ª—å—è–Ω–æ–≤?', reply_markup=keyboard)
    bot.register_next_step_handler(msg, count_of_hookahs_get)


def count_of_hookahs_get(message):
    if message.text == '–û–¥–∏–Ω':
        order_set_address(message)

    elif message.text == '–î–≤–∞':
        order_set_address(message)

    elif message.text == '–¢—Ä–∏':
        order_set_address(message)

    elif message.text == '‚Ü™ –ù–∞–∑–∞–¥':
        banquet(message)


def price_list(message):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row('–¢–∞–±–∞–∫', '–û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –±–∞–Ω–∫–µ—Ç–æ–≤')
    keyboard.row('‚Ü™ –ù–∞–∑–∞–¥')
    msg = bot.send_message(message.chat.id, '–ü—Ä–∞–π—Å-–ª–∏—Å—Ç:', reply_markup=keyboard)
    bot.register_next_step_handler(msg, price_list_get)


def price_list_get(message):
    if message.text == '–¢–∞–±–∞–∫':
        tobacco_prices(message)

    elif message.text == '–û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –±–∞–Ω–∫–µ—Ç–æ–≤':
        bot.send_message(message.chat.id, inf.banquet_price)
        price_list(message)

    elif message.text == '‚Ü™ –ù–∞–∑–∞–¥':
        main_menu(message)


def tobacco_prices(message):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row('–õ—ë–≥–∫–∏–π', '–ö—Ä–µ–ø–∫–∏–π')
    keyboard.row('‚Ü™ –ù–∞–∑–∞–¥')
    msg = bot.send_message(message.chat.id, '–¢–∞–±–∞–∫:', reply_markup=keyboard)
    bot.register_next_step_handler(msg, tobacco_prices)


def tobacco_prices_get(message):
    if message.text == '–õ—ë–≥–∫–∏–π':
        bot.send_message(message.chat.id, inf.easy_tobacco)
        price_list(message)

    elif message.text == '–ö—Ä–µ–ø–∫–∏–π':
        bot.send_message(message.chat.id, inf.hard_tobacco)
        price_list(message)

    elif message.text == '‚Ü™ –ù–∞–∑–∞–¥':
        main_menu(message)


def settings(message):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row('üè† –î–æ–º–∞—à–Ω–∏–π –∞–¥—Ä–µ—Å', 'üìö –ò—Å—Ç–æ—Ä–∏—è –∑–∞–∫–∞–∑–æ–≤')
    keyboard.row('‚Ü™ –ù–∞–∑–∞–¥')
    msg = bot.send_message(message.chat.id, 'üë§ –ê–∫–∫–∞—É–Ω—Ç:', reply_markup=keyboard)
    bot.register_next_step_handler(msg, account_info)


def account_info(message):
    if message.text == 'üè† –î–æ–º–∞—à–Ω–∏–π –∞–¥—Ä–µ—Å':
        set_home_address(message)

    elif message.text == 'üìö –ò—Å—Ç–æ—Ä–∏—è –∑–∞–∫–∞–∑–æ–≤':
        bot.send_message(message.chat.id, 'Empty')
        settings(message)

    elif message.text == '‚Ü™ –ù–∞–∑–∞–¥':
        main_menu(message)


def set_home_address(message):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row('–°–æ—Ö—Ä–∞–Ω–∏—Ç—å')
    msg = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –¥–æ–º–∞—à–Ω–∏–π –∞–¥—Ä–µ—Å:', reply_markup=keyboard)
    bot.register_next_step_handler(msg, save_address)


def save_address(message):
    if message.text == '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å':
        bot.send_message(message.chat.id, '–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ')
        account_info(message)


def about(message):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add('‚Ü™ –ù–∞–∑–∞–¥')
    msg = bot.send_message(message.chat.id, inf.about_us, reply_markup=keyboard)
    bot.register_next_step_handler(msg, main_menu)


def info(message):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row('–ü—Ä–∞–≤–∏–ª–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è —É—Å–ª—É–≥')
    keyboard.row('–®—Ç—Ä–∞—Ñ—ã')
    keyboard.row('‚Ü™ –ù–∞–∑–∞–¥')
    msg = bot.send_message(message.chat.id, '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:', reply_markup=keyboard)
    bot.register_next_step_handler(msg, select_info)


def select_info(message):
    if message.text == '–ü—Ä–∞–≤–∏–ª–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è —É—Å–ª—É–≥':
        bot.send_message(message.chat.id, 'Empty')
        info(message)

    elif message.text == '–®—Ç—Ä–∞—Ñ—ã':
        bot.send_message(message.chat.id, 'Empty')
        info(message)

    elif message.text == '‚Ü™ –ù–∞–∑–∞–¥':
        main_menu(message)


bot.remove_webhook()

bot.set_webhook(url=WEBHOOK_URL_BASE + WEBHOOK_URL_PATH, certificate=open(WEBHOOK_SSL_CERT, 'r'))


cherrypy.config.update({
    'server.socket_host': WEBHOOK_LISTEN,
    'server.socket_port': WEBHOOK_PORT,
    'server.ssl_module': 'builtin',
    'server.ssl_certificate': WEBHOOK_SSL_CERT,
    'server.ssl_private_key': WEBHOOK_SSL_PRIV
})

cherrypy.quickstart(WebhookServer(), WEBHOOK_URL_PATH, {'/': {}})


if __name__ == '__main__':
    bot.polling(none_stop=True)
